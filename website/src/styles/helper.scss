
$screen-tablet:768px;
$screen-desktop:1200px;


@mixin tablet {
    @media (min-width: $screen-tablet) { @content; }
  }
  @mixin desktop {
    @media (min-width: $screen-desktop) { @content; }
  }


$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@font-face {
    font-family: 'Saira Stencil One';
    src: local('Saira Stencil One'), url('../assets/fonts/SairaStencilOne-Regular.ttf') format('truetype');
}

$color-pal-1: #00386D;
$color-pal-2: #56DC92;
$color-pal-3: #EDF5DF;


$font-main: 'Saira Stencil One';


@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@function square($number) {
  $unitless: strip-units($number);
  @return ($unitless * $unitless);
}

@function get-unit($number) {
  @return unit($number);
}

@function get-hypotenuse($ab, $ac) {
  @if get-unit($ab) == get-unit($ac) {
    @return sqrt(square($ab) + square($ac)) + unquote(get-unit($ab));
  } @else {
    @error 'The two value into the get-hypotenuse() function must share the same unit type';
  }
}
  